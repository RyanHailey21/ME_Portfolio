---
import Layout from './Layout.astro'; // Main site layout
const baseUrl = import.meta.env.BASE_URL;
const projectUrl = `${baseUrl}/projects`;
export interface Frontmatter {
  title: string;
  description: string;
  image: ImageMetadata | string; // Can be imported image or string URL
  tags: string[];
  technologies: string[];
  githubUrl?: string;
  videoUrl?: ImageMetadata | string; // Can be imported video or string URL for embed
}

const { frontmatter } = Astro.props;
const { title, description, image, tags, technologies, githubUrl, videoUrl } = frontmatter;

// Helper function to determine video MIME type
function getVideoType(src: string): string {
  if (src.endsWith('.mp4')) return 'video/mp4';
  if (src.endsWith('.webm')) return 'video/webm';
  if (src.endsWith('.ogg')) return 'video/ogg';
  if (src.endsWith('.mov')) return 'video/mp4'; // .MOV can sometimes be played as video/mp4, or might need conversion for broader compatibility
  return 'video/mp4'; // Default fallback
}

const imageSrc = typeof image === 'string' ? image : image.src;
---

<Layout title={`${title} | Portfolio`}>
  <main class="container mx-auto px-4 py-8">
    <a href= {projectUrl} class="inline-flex items-center text-portfolio-blue hover:text-portfolio-teal mb-6">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L4.414 9H17a1 1 0 110 2H4.414l5.293 5.293a1 1 0 010 1.414z" clip-rule="evenodd" />
      </svg>
      Back to Projects
    </a>

    <article class="bg-dark-card rounded-lg shadow-lg overflow-hidden">
      <div class="p-8">
        <h1 class="text-4xl font-bold mb-4 bg-gradient-portfolio text-transparent bg-clip-text">
          {title}
        </h1>

        <div class="flex flex-wrap gap-2 mb-6">
          {tags.map((tag: string) => (
            <span class="px-3 py-1 text-sm rounded-full bg-gradient-portfolio text-white">
              {tag}
            </span>
          ))}
        </div>
        
        <img src={imageSrc} alt={title} class="w-full rounded-lg mb-6" />
        
        {videoUrl && (
          <div class="mb-6">
            <h2 class="text-2xl font-semibold mb-4 text-gray-100">Project Video</h2>
            {(() => {
              let finalVideoSrc = '';
              if (typeof videoUrl === 'object' && videoUrl.src) {
                // Local video (imported asset)
                finalVideoSrc = (videoUrl as ImageMetadata).src; // Already processed by Astro
              } else if (typeof videoUrl === 'string') {
                if (videoUrl.startsWith('/')) {
                  // Local video (string path from frontmatter)
                  finalVideoSrc = baseUrl + videoUrl;
                } else {
                  // External video (e.g., YouTube embed)
                  finalVideoSrc = videoUrl;
                }
              }

              if (finalVideoSrc) {
                if (finalVideoSrc.startsWith('/')) { // Local video path
                  return (
                    <video controls class="w-full rounded-lg aspect-video">
                      <source src={finalVideoSrc} type={getVideoType(finalVideoSrc)} />
                      Your browser does not support the video tag.
                    </video>
                  );
                } else { // External video URL
                  return (
                    <div class="relative pb-[56.25%] h-0 overflow-hidden max-w-full"> {/* 16:9 Aspect Ratio */}
                      <iframe 
                        src={finalVideoSrc} 
                        frameborder="0" 
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
                        allowfullscreen
                        class="absolute top-0 left-0 w-full h-full rounded-lg"
                      ></iframe>
                    </div>
                  );
                }
              }
              return null;
            })()}
          </div>
        )}

        <div class="prose prose-invert max-w-none mb-6">
          <slot /> {/* MDX content (full description) goes here */}
        </div>

        <h2 class="text-2xl font-semibold mb-4 text-gray-100">Technologies Used</h2>
        <ul class="list-disc list-inside mb-6 text-gray-300">
          {technologies.map((tech: string) => (
            <li>{tech}</li>
          ))}
        </ul>

        <div class="flex gap-4">
          {githubUrl && (
            <a
              href={githubUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-block px-6 py-3 bg-gradient-portfolio text-white rounded-lg hover:opacity-90 transition-opacity"
            >
              View on GitHub
            </a>
          )}
        </div>
      </div>
    </article>
  </main>
</Layout>
